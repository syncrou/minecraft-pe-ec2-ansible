---
# MinecraftPE MP ec2 
- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    key: 'db'
    instance_type: 'm1.small'
    region: 'us-east-1'
    subnet: 'subnet-f849ff96'
    ec2_instances:
      - name: 'minecraftpe-mp'
        tags: ['foo', 'bar']
        group_id: 'sg-dfe6c6a6'
        image: 'ami-bcb853d1'
        ssh_user: 'ubuntu'
  tasks:
  - name: Create Ec2 Instance
    ec2:
      key_name: "{{ key }}"
      instance_tags: {Name: "{{ item.name }}"}
      group_id: "{{ item.group_id }}"
      instance_type: "{{ instance_type }}"
      region: "{{ region }}"
      image: "{{ item.image }}"
      wait: yes
      count: 1
      vpc_subnet_id: "{{ subnet }}"
      assign_public_ip: yes
    register: ec2 
    with_items: ec2_instances

 - name: Add all instance public IPs to host group
     add_host: hostname={{ item.public_ip }} groups=minecraftpe
     with_items: ec2.instances

  - name: output the Item
    debug: var= "{{ item.public_ip }}"
    with_items: ec2.instances

  #  - name: Wait for SSH
  #    wait_for:
  #      #host: "{{ ec2.results[0].item.1['public_ip'] }}"
  #      host: "{{ ec2.results.0.item.public_ip }}"
  #      port: 22
  #      delay: 10
  #      timeout: 320
  #      state: started
  #    with_items: ec2.results
  #
  #  - name: Add hosts group temporary inventory group with pem path
  #    add_host:
  #      name: "{{ item.1.platform }} {{ ec2.results[item.0]['instances'][0]['public_ip'] }}"
  #      groups: minecraftpe_hosts
  #      ansible_ssh_host: "{{ ec2.results[item.0]['instances'][0]['public_ip'] }}"
  #      ansible_ssh_private_key_file: '{{ pem_path }}'
  #      ansible_ssh_user: "{{ item.1.ssh_user }}"
  #      ec2_vars: "{{ ec2.results[item.0]['instances'][0] }}"
  #      ec2_instance_ids: "{{ ec2.results[item.0]['instance_ids'] }}"
  #    with_indexed_items: ec2_instances
  #
  #- hosts: minecraftpe_hosts
  #  tasks:
  #    - ping:
